<?xml version="1.0" encoding="UTF-8"?>

<!-- 
 * Copyright 2008 Philippe Prados.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
-->

<?xml-stylesheet type="text/xsl" href="../../../../xslt/xslt-to-xhtml.xslt" ?>
<xsl:stylesheet
	version="2.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation=
		"http://www.w3.org/1999/XSL/Transform http://www.w3.org/2007/schema-for-xslt20.xsd
		 http://jndi-resources.googlecode.com/1.0/ http://www.prados.fr/xsd/1.0/jndi-resources.xsd
		"
	xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
	xmlns:jndi="http://jndi-resources.googlecode.com/1.0/"
	xmlns:tools="http://jndi-resources.googlecode.com/1.0/java/com.googlecode.jndiresources.tools.XSLTools"
	exclude-result-prefixes="#all"
	>
<xsl:strip-space elements="*"/>
<xsl:output method="xml" indent="yes" encoding="utf-8" omit-xml-declaration="no"/>

<xsl:variable  name="basefilename"><xsl:value-of select="concat('deploy/',$currentid,'/',$currentid,'_activemq_queue-service')"/></xsl:variable>
<xsl:variable  name="filename"><xsl:value-of select="concat($targetdir,'jboss.server.conf/',$basefilename,'.jndi')"/></xsl:variable>

<xsl:template match="jndi:resources[@id=$currentid]">
<xsl:value-of select="tools:info(concat('Generate ',$filename))"/>
<xsl:result-document  href="{$filename}">
<xsl:text>&#xA;</xsl:text>
<xsl:comment>Generated by jndi-resources v<xsl:value-of select="$version"/></xsl:comment>
<xsl:text>&#xA;</xsl:text>
<xsl:processing-instruction name="jndi-stylesheet">href="xslt/save.xslt" target="<xsl:value-of select="concat($basefilename,'.xml')"/>"</xsl:processing-instruction>
<!-- <xsl:processing-instruction name="jndi-stylesheet">href="xslt/merge-jboss-server.xslt" target="<xsl:value-of select="concat($basefilename,'_jms-service.xml')"/>"</xsl:processing-instruction>-->
<xsl:text>&#xA;</xsl:text>
<server>
	<xsl:apply-templates />
</server>
</xsl:result-document>
</xsl:template>

<xsl:template name="basename">
	<xsl:param name="name" select="."/>
	<xsl:choose>
		<xsl:when test="contains($name,'/')">
			<xsl:variable name="post" select="substring-after($name,'/')" />
			<xsl:call-template name="basename">
				<xsl:with-param name="name"  select="$post"/>
			</xsl:call-template>
		</xsl:when>
		<xsl:otherwise>
			<xsl:value-of select="$name"/>
		</xsl:otherwise>
	</xsl:choose>
</xsl:template>
 
<!-- http://activemq.apache.org/resource-adapter-properties.html -->
<xsl:template match="jndi:resources[@id=$currentid]/jndi:resource[@familly=$familly]">

	<xsl:text>&#xA;</xsl:text>
	<xsl:text>&#xA;   </xsl:text>
	<xsl:comment>Register JMS Queue for key <xsl:value-of select="@name"/></xsl:comment>
	<xsl:text>&#xA;   </xsl:text>

	<mbean 
   		code="org.jboss.resource.deployment.AdminObject" 
   		name="{$currentid}:service=Queue,name={@name}"
	>
		<attribute name="JNDIName">java:<xsl:value-of select="concat('${jndi-prefix}',@name)" /></attribute>
      <depends optional-attribute-name="RARName">jboss.jca:service=RARDeployment,name='activemq-ra.rar'</depends>
      <attribute name="Type">javax.jms.Queue</attribute>
      <attribute name="Properties">
PhysicalName=queue.<xsl:call-template name="basename">
				<xsl:with-param name="name"  select="@name"/>
			</xsl:call-template>&#xA;
<xsl:value-of select="jndi:extends[@appsrv=$appsrv]/text()"/>
&#xA;
      </attribute>
	  <xsl:apply-templates select="jndi:extends[@appsrv=$appsrv]/*" mode="remove-namespace"/>
   </mbean>
</xsl:template>

<xsl:template name="attribute">
<xsl:param name="name"/>
<xsl:param name="alias"/>
<xsl:param name="default"/>
<xsl:param name="value"/>
	    <xsl:choose>
	    	<xsl:when test=".//jndi:property[@name=$name]">
	    		<xsl:value-of select="$alias"/>=<xsl:value-of select=".//jndi:property[@name=$name]/@value"/>
	    	</xsl:when>
	    	<xsl:otherwise>
	    		<xsl:value-of select="$alias"/>=<xsl:value-of select="$default"/>
	    	</xsl:otherwise>
	    </xsl:choose>
</xsl:template>
  
<xsl:template match="text()|comment()" />

<!-- Remove name-space -->
<xsl:template match="/|comment()|processing-instruction()" mode="remove-namespace">
    <xsl:copy>
      <xsl:apply-templates mode="remove-namespace"/>
    </xsl:copy>
</xsl:template>
<xsl:template match="*" mode="remove-namespace">
    <xsl:element name="{local-name()}">
      <xsl:apply-templates select="@*|node()" mode="remove-namespace"/>
    </xsl:element>
</xsl:template>
<xsl:template match="@*" mode="remove-namespace">
    <xsl:attribute name="{local-name()}">
      <xsl:value-of select="."/>
    </xsl:attribute>
</xsl:template>

</xsl:stylesheet>
