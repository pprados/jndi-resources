#summary Installation de l'utilitaire.
#labels Phase-Deploy

= Installation =

Le programme est [http://code.google.com/p/jndi-resources/downloads/list disponible] sous la forme d'une archive `tar.gz` ou `zip` qu'il faut déplier dans un répertoire.

L'archive `jndi-resources-<version>.(tar.gz|zip)` possède tous les utilitaires.

L'archive `jndi-resources-<version>-install.(tar.gz|zip)` ne possède que le nécessaire pour installer les ressources d'un composant JEE dans un serveur d'applications. C'est une version plus économe en taille.

Le répertoire `$JNDI_HOME/bin` possède trois scripts : `jndi-config.sh`, `jndi-install.sh` et `jndi-resources.sh`.

Le répertoire `$JNDI_HOME/lib` possède les librairies Java nécessaires aux utilitaires.

Le répertoire `$JNDI_HOME/templates` possède les règles de productions des fichiers de paramétrage pour les différents serveurs d'applications.

Le répertoire `$JNDI_HOME/xslt` possède, à titre d'illustration, des scripts XSTL pour [transformer] les fichiers `web.xml` et `application.xml` vers les fichiers nécessaires aux différents serveurs d'applications (`jboss.xml`, `jboss-web.xml`, `context.xml`, etc.).

Les répertoires `templates` et `xslt` ne sont pas présents dans l'archive  `jndi-resources-<version>-install.(tar.gz|zip)` car ils ne sont pas nécessaires lors de l'installation des composants.

Si des drivers sont nécessaires à la publication de ressources, il faut utiliser un repository Maven ( http://maven.apache.org ) et déclarer un repository local (généralement dans `~/.m2/repository`). Cela est nécessaire lors de la phase de paramétrage, mais pas lors de la phase d'installation du composant.  Les différents drivers sont récupérés du repository Maven et recopiés dans le repository local.

Suite: [ExempleRapide Exemple Rapide]