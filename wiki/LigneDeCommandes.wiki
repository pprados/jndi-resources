#summary Les paramètres de la ligne de commandes.

= Paramètres de la ligne de commandes =

Il existe trois utilitaires : l'un se charge de générer les fichiers de configuration à partir de fichiers `jndi-resources.xml`, le deuxième se charge d'installer les fichiers pour un serveur d'applications et le troisième est un enchaînement des deux premiers.

`jndi-config.sh` accepte différents paramètres.
{{{
Usage: jndi-config.sh [-h] (-w <war|ear> | -j <jndi-resources.xml>) \ 
                      [-t <templates>] -p <destination> 
(-w|--war) <war|ear file>       : The jndi-resources descriptions in META-INF 
(-j|--jndi-file) <url[#id]>     : The jndi-resources descriptions fragment 
(-t|--templates) <dir>          : The templates transformations to use. 
(-p|--packages) <destination>   : The destination directory. 
-l                              : Log info. 
-ll                             : Log debug. 
(-h|--help)                     : This help 
}}}
Vous pouvez indiquer un fichier `jndi-resources.xml` à l'aide du paramètre `-j`, indiquer une archive `.war` possédant déjà un fichier `WEB-INF/jndi-resources.xml` ou une combinaison des deux paramètres.

Cet utilitaire exploite les repositories [http://maven.apache.org Maven] pour y extraire les drivers nécessaires à l'application à installer.

`jndi-install.sh` accepte les paramètres suivant :
{{{
Usage: jndi-install.sh [-h] -d <appsrvconfdir=dir> \
                       [-D<key>=<value>|xpath:<[ns,]xpath>]* \ 
                       [--xsl key=value>|<[ns,]xpath>]* \ 
                       [-P <url>]* -p <sourcepackage> -a <jboss|...> 
(-d|--dest) <key>=<value>          : Define destination directories 
-D<key>=<value>|xpath:<[ns,]xpath> : Define property 
--xsl <key>=<value>|xpath:...      : Define XSL variable 
(-P|--properties) <url>            : List of properties files 
(-p|--package) <sourcepackage>     : Sources product with JNDIConfig 
(-a|--appsrv) <jboss|tomcat...>    : Familly of application server 
(-v|--version)                     : Application server version to use 
-l                                 : Log info. 
-ll                                : Log debug. 
(-h|--help)                        : This help 
}}}

`jndi-resources.sh` est une combinaison des deux premiers utilitaires. Il n'est alors plus nécessaire d'indiquer le paramètre `--package` car un répertoire temporaire est alors utilisé. Vous pouvez continuer à l'utiliser si vous souhaitez jeter un œil sur les fichiers générés.
{{{
Usage: jndi-resources.sh [-h] (-w <war|ear> | -j <jndi-resources.xml>) \ 
                         [-t <templates>] [-p <destination>] -d <appsrvconfdir=dir> \
                         [-D<key>=<value>|xpath:<[ns,]xpath>]* \ 
                         [--xsl key=<value>|xpath:<[ns,]xpath>]* \ 
                         [-P <url>]* -p <sourcepackage> -a <jboss|...> 
(-w|--war) <war|ear file>          : The jndi-resources descriptions in META-INF 
(-j|--jndi-file) <url[#id]>        : The jndi-resources descriptions fragment 
(-t|--templates) <dir>             : The templates transformations to use. 
(-p|--packages) <destination>      : The temporary configuration directory. 
(-d|--dest) <key>=<value>          : Define destination directories 
-D<key>=<value>|xpath:<[ns,]xpath> : Define property 
--xsl <key>=<value>|xpath:...      : Define XSL variable 
(-P|--properties) <url>            : List of properties files 
(-a|--appsrv) <jboss|tomcat...>    : Familly of application server 
(-v|--version)                     : Application server version to use 
-l                                 : Log info. 
-ll                                : Log debug. 
(-h|--help)                        : This help 
}}}

Suite : [Desinstallation Désinstallation]