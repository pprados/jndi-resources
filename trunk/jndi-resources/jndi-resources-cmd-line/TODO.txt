Pour l'iteration d'URL :
http://www.test.com/netboot/apps/ scans the specified remote location using WebDAV. 
This will only work if the remote http server supports the WebDAV PROPFIND command.

------------------------------------------
Tomcat:
Pour ajouter les applications par défaut de Tomcat, il faut ajouter
<Context path="/balancer" docBase="/usr/share/tomcat5.5-webapps/balancer" debug="0" privileged="true" allowLinking="true"/>
<Context path="/" docBase="/usr/share/tomcat5.5-webapps/ROOT" debug="0" privileged="true" allowLinking="true"/>
<Context path="/servlets-examples" docBase="/usr/share/tomcat5.5-webapps/servlets-examples" debug="0" privileged="true" allowLinking="true"/>
<Context path="/tomcat-docs" docBase="/usr/share/tomcat5.5-webapps/tomcat-docs" debug="0" privileged="false" allowLinking="true"/>
<Context path="/webdav" docBase="/usr/share/tomcat5.5-webapps/webdav" debug="0" privileged="true" allowLinking="true"/>
<Context path="/host-manager" docBase="/usr/share/tomcat5.5/server/webapps/host-manager" debug="0" privileged="true" antiResourceLocking="false" antiJARLocking="false"/>
<Context path="/jsp-examples" docBase="/usr/share/tomcat5.5-webapps/jsp-examples" debug="0" privileged="true" allowLinking="true"/>
<Context path="/admin" docBase="/usr/share/tomcat5.5/server/webapps/admin" debug="0" privileged="true" allowLinking="true">
  <Resources className="org.apache.naming.resources.FileDirContext" allowLinking="true" />
  <Valve className="org.apache.catalina.valves.RemoteAddrValve" allow="127.0.0.1"/>
  <Logger className="org.apache.catalina.logger.FileLogger" prefix="localhost_admin_" suffix=".log" timestamp="true"/>
</Context>
<Context path="/manager" docBase="/usr/share/tomcat5.5/server/webapps/manager" debug="0" privileged="true">
  <ResourceLink name="users" global="UserDatabase" type="org.apache.catalina.UserDatabase"/>
</Context>
dans Servers/Tomcat v5.5 Server at localhost-config/server.xml
Il faut également modifier le tomcat-users.xml pour ajouter les roles manager et admin
Cela est copié dans un rep temporaire de Eclipse (regarde la ligne de commande de lancement de tomcat)

Attention : ici http://tomcat.apache.org/tomcat-5.5-doc/jndi-datasource-examples-howto.html
il est indiquer ceci : n order to get Realms to work, 
the realm must refer to the datasource as defined in the <GlobalNamingResources> or <Context> section, 
not a datasource as renamed using <ResourceLink>.

This works great on Tomcat 5, but if it you want it to work on Tomcat 4 - 
you have to use the Manager app to deploy your WAR.
Note that the META-INF/context.xml trick only works if you are creating a WAR file. 
If you are deploying by pointing Tomcat to an expanded directory structure, 
this trick won’t work. I am using Tomcat 5.0.

------------------------------------------
Pour utiliser un JNDI externe à JBoss, il faut simplement modifier le fichier conf/jndi.properties pour
ajouter l'URL de connexion.
java.naming.provider.url=jnp\://localhost\:11099
Il est alors possible d'alléger le MBEAN
 <mbean code="org.jboss.naming.NamingService"
      name="jboss:service=Naming"
      xmbean-dd="resource:xmdesc/NamingService-xmbean.xml">
<!--
      <attribute name="CallByValue">false</attribute>
      <attribute name="Port">1099</attribute>
      <attribute name="BindAddress">${jboss.bind.address}</attribute>
      <attribute name="RmiPort">1098</attribute>
      <attribute name="RmiBindAddress">${jboss.bind.address}</attribute>
-->
      <depends optional-attribute-name="LookupPool"
         proxy-type="attribute">jboss.system:service=ThreadPool</depends>
      <depends optional-attribute-name="Naming"
         proxy-type="attribute">jboss:service=NamingBeanImpl</depends>

   </mbean>
------------------------------------------
Avec Jboss (quelle version ?) il est possible d'indiquer des paramètres la construction. 
Voir le fichier messaging-service.xml de la version 5.
      <constructor>
         <!-- ServerPeerID -->
         <arg type="int" value="0"/>
         <!-- DefaultQueueJNDIContext -->
         <arg type="java.lang.String" value="/queue"/>
         <!-- DefaultTopicJNDIContext -->
         <arg type="java.lang.String" value="/topic"/>
      </constructor>
------------------------------------------
POUR IBM, il y a dans les stubs WS, utilisation de la clef JNDI java:comp/env/service/NomDuService
POUR IBM, les clefs JNDI sont organisé ainsi :
/cell/nodes/localhost/servers/server1
Une cellule est un cluster, avec plusieurs nodes, dans un nodes, il y a plusieurs serveurs, et on en prend un.
Ensuite, on peut ajouter ce que l'on veut comme scope global.
------------------------------------------
Voir twiddle.sh de JBoss pour faire des invocations JMX en ligne de commande pour les tests unitaires.
------------------------------------------
Installation des drivers annuaires dans repo Maven
mvn install:install-file -DgroupId=com.sun.jndi -DartifactId=fscontext -Dversion=1.2-beta-3 -Dpackaging=jar -Dfile=/home/pprados/Desktop/jndi/fs/lib/fscontext-1.2-SNAPSHOT.jar
mvn install:install-file -DgroupId=com.sun.jndi -DartifactId=providerutil -Dversion=1.2 -Dpackaging=jar -Dfile=/home/pprados/Desktop/jndi/fs/lib/providerutil-1.2-SNAPSHOT.jar
------------------------------------------
UTILISER CELA : http://maven.apache.org/guides/mini/guide-embedding-m2.html
------------------------------------------
TODO : Faire interaction pour la saisie des variables de déploiements
TODO : Tester en Windows et en Cygwin, et Darwin (Mac os)
TODO : Maven Il faut trouver comment enrichir la liste des raports, via site.xml ou autres, pour ajouter le XRef XSLT.
TODO : faire un Tomcat-jndi-cli
TODO : faire plug-in maven pour générer et/ou adapter les fichiers servlet, jndi, context, etc.
TODO : voir le pool de connexion Oracle ici : http://tomcat.apache.org/tomcat-5.5-doc/catalina/docs/api/index.html
TODO : Il faut trouver un moyen d'envelver les namespaces dans les extensions. Ca bug partout.
------------------------------------------
